<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Vehicule extends \App\Entity\Vehicule implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'idV', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'type', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'immat', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'etat', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'kilometrage', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'chevaux', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'marque', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'modele', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'lpec', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'prix', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'img', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'reservations'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'idV', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'type', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'immat', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'etat', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'kilometrage', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'chevaux', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'marque', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'modele', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'lpec', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'prix', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'img', '' . "\0" . 'App\\Entity\\Vehicule' . "\0" . 'reservations'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Vehicule $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getidV(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getidV();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getidV', []);

        return parent::getidV();
    }

    /**
     * {@inheritDoc}
     */
    public function getType(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(string $type): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getImmat(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImmat', []);

        return parent::getImmat();
    }

    /**
     * {@inheritDoc}
     */
    public function setImmat(string $immat): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImmat', [$immat]);

        return parent::setImmat($immat);
    }

    /**
     * {@inheritDoc}
     */
    public function isEtat(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEtat', []);

        return parent::isEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtat(int $etat): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtat', [$etat]);

        return parent::setEtat($etat);
    }

    /**
     * {@inheritDoc}
     */
    public function getKilometrage(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKilometrage', []);

        return parent::getKilometrage();
    }

    /**
     * {@inheritDoc}
     */
    public function setKilometrage(string $kilometrage): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setKilometrage', [$kilometrage]);

        return parent::setKilometrage($kilometrage);
    }

    /**
     * {@inheritDoc}
     */
    public function getChevaux(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChevaux', []);

        return parent::getChevaux();
    }

    /**
     * {@inheritDoc}
     */
    public function setChevaux(int $chevaux): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChevaux', [$chevaux]);

        return parent::setChevaux($chevaux);
    }

    /**
     * {@inheritDoc}
     */
    public function getMarque(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMarque', []);

        return parent::getMarque();
    }

    /**
     * {@inheritDoc}
     */
    public function setMarque(string $marque): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMarque', [$marque]);

        return parent::setMarque($marque);
    }

    /**
     * {@inheritDoc}
     */
    public function getModele(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModele', []);

        return parent::getModele();
    }

    /**
     * {@inheritDoc}
     */
    public function setModele(string $modele): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModele', [$modele]);

        return parent::setModele($modele);
    }

    /**
     * {@inheritDoc}
     */
    public function getlpec(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getlpec', []);

        return parent::getlpec();
    }

    /**
     * {@inheritDoc}
     */
    public function setlpec(string $lpec): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setlpec', [$lpec]);

        return parent::setlpec($lpec);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrix(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrix', []);

        return parent::getPrix();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrix(float $prix): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrix', [$prix]);

        return parent::setPrix($prix);
    }

    /**
     * {@inheritDoc}
     */
    public function getImg(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImg', []);

        return parent::getImg();
    }

    /**
     * {@inheritDoc}
     */
    public function setImg(string $img): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImg', [$img]);

        return parent::setImg($img);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getReservations(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReservations', []);

        return parent::getReservations();
    }

    /**
     * {@inheritDoc}
     */
    public function addReservation(\App\Entity\Reservation $reservation): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReservation', [$reservation]);

        return parent::addReservation($reservation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeReservation(\App\Entity\Reservation $reservation): \App\Entity\Vehicule
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeReservation', [$reservation]);

        return parent::removeReservation($reservation);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtat(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtat', []);

        return parent::getEtat();
    }

}
